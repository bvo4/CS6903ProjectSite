[{"C:\\Users\\brand\\Documents\\CS 6903\\Project 1\\GitHub\\bvo4.github.io\\src\\index.js":"1","C:\\Users\\brand\\Documents\\CS 6903\\Project 1\\GitHub\\bvo4.github.io\\src\\App.js":"2","C:\\Users\\brand\\Documents\\CS 6903\\Project 1\\GitHub\\bvo4.github.io\\src\\reportWebVitals.js":"3"},{"size":535,"mtime":1651255347605,"results":"4","hashOfConfig":"5"},{"size":3059,"mtime":1651599917615,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1651255347666,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"oipqry",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"C:\\Users\\brand\\Documents\\CS 6903\\Project 1\\GitHub\\bvo4.github.io\\src\\index.js",[],[],[],"C:\\Users\\brand\\Documents\\CS 6903\\Project 1\\GitHub\\bvo4.github.io\\src\\App.js",["19","20","21"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// Watch the Button tutorial\n// http://react.school/ui/button\n\n// Free React training\n// http://react.school/join\n\n// Free Material-UI template\n// http://react.school/material-ui/templates\n\nconst theme = {\n  blue: {\n    default: \"#3f51b5\",\n    hover: \"#283593\"\n  },\n  pink: {\n    default: \"#D0312D\",\n    hover: \"#ad1457\"\n  }\n};\n\n\n\nconst Button = styled.button`\n  background-color: ${(props) => theme[props.theme].default};\n  color: white;\n  padding: 5px 15px;\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  display: flex;\n   flexDirection: 'row',\n   alignItems: 'center' //This will center you button\n  margin: 10px 0px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms;\n  &:hover {\n    background-color: ${(props) => theme[props.theme].hover};\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\nButton.defaultProps = {\n  theme: \"blue\"\n};\n\n\nconst ButtonToggle = styled(Button)`\n  opacity: 0.7;\n  ${({ active }) =>\n    active &&\n    `\n    opacity: 1; \n  `}\n`;\n\nconst Tab = styled.button`\n  padding: 10px 30px;\n  cursor: pointer;\n  opacity: 0.6;\n  background: white;\n  flexDirection: 'row';\n  justifyContent: 'space-between'\n  border: 0;\n  outline: 0;\n  border-bottom: 2px solid transparent;\n  transition: ease border-bottom 250ms;\n  ${({ active }) =>\n    active &&\n    `\n    border-bottom: 2px solid black;\n    opacity: 1;\n  `}\n`;\n\n\n\nexport default function App() {\n  // make terminal flag\n  const [questionsList, setQuestionsList] = useState([\n    {question: 'test0', terminal: false},\n    {question: 'test1', terminal: false},\n    {question: 'test2', terminal: false},\n    {question: 'test3', terminal: true},\n    {question: 'test4', terminal: true},\n    {question: 'test5', terminal: true},\n    {question: 'test6', terminal: true},\n\n  ]);\n  const [questionPtr, setQuestionPtr] = useState(0);\n\n  function updateQuestion(selection) {\n    var new_ptr;\n    if (selection) {\n      new_ptr = 2*questionPtr + 1\n    }\n    else {\n      new_ptr = 2*questionPtr + 2\n    }\n    \n    setQuestionPtr(new_ptr);\n  }\n\n\n  // MORE FEATURES:\n  // add logic to go back (go back to parent node)\n  // add logic to start over\n  function renderButtons() {\n    let terminal = questionsList[questionPtr].terminal;\n    if (terminal) {\n      return (<div />) // add div for final answer\n    }\n    else {\n      return (\n        <div class=\"btnDiv\">\n            <div>\n            <Button onClick={() => updateQuestion(true)}>Yes</Button>\n            </div>\n            <div>\n            <Button theme=\"pink\" onClick={() => updateQuestion(false)}>\n              No\n            </Button>\n          </div>\n          </div>\n      )\n    }\n  }\n\n  return (\n  <>\n    <h1>\n    CS6903 Project\n    </h1>\n    \n    <body>\n    Here is where the questions regarding to what cryptographic primitve you want will be asked.\n    </body>\n    \n    <p>\n      {questionsList[questionPtr].question}\n    </p>\n    \n    {renderButtons()}\n  </>\n  );\n}\n","C:\\Users\\brand\\Documents\\CS 6903\\Project 1\\GitHub\\bvo4.github.io\\src\\reportWebVitals.js",[],[],{"ruleId":"22","severity":1,"message":"23","line":53,"column":7,"nodeType":"24","messageId":"25","endLine":53,"endColumn":19},{"ruleId":"22","severity":1,"message":"26","line":62,"column":7,"nodeType":"24","messageId":"25","endLine":62,"endColumn":10},{"ruleId":"22","severity":1,"message":"27","line":85,"column":25,"nodeType":"24","messageId":"25","endLine":85,"endColumn":41},"no-unused-vars","'ButtonToggle' is assigned a value but never used.","Identifier","unusedVar","'Tab' is assigned a value but never used.","'setQuestionsList' is assigned a value but never used."]